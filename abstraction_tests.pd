#N canvas 0 66 3440 1340 16;
#X obj 13 40 bng 23 250 50 0 empty empty empty 0 -12 0 16 #fcfcfc #000000 #000000;
#X obj 13 68 f \$0;
#X obj 13 106 s \$0_ns;
#N canvas 94 620 678 716 arrays 0;
#X obj 23 19 array define \$0_a 4;
#X obj 23 56 array define \$0_b 4;
#X obj 24 93 array define \$0_c 4;
#X obj 25 135 array define \$0_d 4;
#X obj 25 193 array define \$0_weight_1 1;
#X obj 26 256 array define \$0_bias_1 1;
#X obj 26 294 array define \$0_activation_output_1 4;
#X obj 27 330 array define \$0_linear_output_1 4;
#X obj 25 224 array define \$0_weight_2 2;
#X restore 13 137 pd arrays;
#X obj 93 106 print name_space;
#X obj 290 11 cnv 23 170 120 empty empty empty 20 12 0 16 #e0e0e0 #404040 0;
#X obj 296 72 d_0;
#X obj 339 71 r \$0_ns;
#X msg 296 39 foo;
#X obj 296 103 print \$0_foo;
#X text 293 13 // outputs <ns>_foo;
#X obj 13 6 loadbang;
#X obj 8 203 cnv 23 240 240 empty empty empty 20 12 0 16 #e0e0e0 #404040 0;
#N canvas 1163 544 456 515 iterator 0;
#X obj 148 58 inlet symbol;
#X obj 167 345 array get;
#X obj 148 110 d_0;
#X obj 181 110 r \$0_ns;
#X obj 124 178 array size;
#X obj 124 213 until;
#X obj 124 241 f;
#X obj 167 258 + 1;
#X msg 229 179 0;
#X obj 148 138 t b s s b b;
#X msg 273 178 1;
#X obj 167 398 outlet values;
#X obj 124 289 t f f;
#X obj 74 398 outlet i;
#X connect 0 0 2 0;
#X connect 1 0 11 0;
#X connect 2 0 9 0;
#X connect 3 0 2 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 8 0 6 1;
#X connect 9 0 4 0;
#X connect 9 1 1 2;
#X connect 9 2 4 1;
#X connect 9 3 8 0;
#X connect 9 4 10 0;
#X connect 10 0 1 1;
#X connect 12 0 13 0;
#X connect 12 1 1 0;
#X restore 16 257 pd iterator;
#X msg 16 228 symbol b;
#X obj 16 291 pack f f;
#X msg 16 387 index:3 val:5;
#X obj 16 319 t b l;
#X obj 16 415 print;
#X msg 53 349 set index:\$1 val:\$2;
#X obj 275 205 cnv 23 240 240 empty empty empty 20 12 0 16 #e0e0e0 #404040 0;
#X obj 282 392 print range;
#X obj 381 392 print range;
#X obj 381 359 nn.range;
#X obj 8 506 cnv 23 600 700 empty empty empty 20 12 0 16 #e0e0e0 #404040 0;
#X obj 34 765 nn.neuron_1 weight_1 bias_1 activation_output_1 linear_output_1 tanh;
#X obj 429 760 r \$0_ns;
#X msg 289 664 symbol a;
#X obj 289 697 d_0;
#X obj 332 696 r \$0_ns;
#X obj 220 734 array get;
#X obj 34 682 t f f;
#X msg 254 706 1;
#X obj 220 817 print activation;
#X obj 407 814 print linear;
#X obj 105 914 d_0;
#X obj 148 913 r \$0_ns;
#X obj 36 951 array get;
#X msg 105 881 symbol activation_output_1;
#X msg 36 821 bang;
#X obj 105 1118 d_0;
#X obj 148 1117 r \$0_ns;
#X obj 36 1146 array get;
#X msg 36 1026 bang;
#X msg 105 1085 symbol linear_output_1;
#X obj 36 1174 print linear array;
#X obj 36 979 print activation array;
#X msg 282 327 5;
#X msg 381 328 0;
#X text 289 210 // handles range <= 0 \; resets counter;
#X obj 282 289 t b b b b;
#X msg 282 260 bang;
#X obj 34 654 nn.range;
#X msg 34 579 4;
#X obj 34 607 t f b b;
#X obj 36 849 t b b;
#X obj 36 1054 t b b;
#X obj 282 359 nn.range;
#X obj 622 1 cnv 23 800 1300 empty empty empty 20 12 0 16 #e0e0e0 #404040 0;
#X obj 635 104 nn.input_cycle a;
#X obj 783 103 r \$0_ns;
#X msg 635 69 bang;
#X msg 697 69 bang;
#X text 630 7 // nn.input_cycle \; repeatedly cycles through an array \; outputs current index and value;
#X msg 637 177 12;
#X obj 637 205 until;
#X obj 637 233 nn.input_cycle b;
#X obj 635 135 print index a;
#X obj 760 134 print value a;
#X obj 637 261 print index b;
#X obj 762 261 print value b;
#X obj 777 233 r \$0_ns;
#X obj 637 398 nn.neuron_1 weight_1 bias_1 activation_output_1 linear_output_1 tanh;
#X obj 1026 398 r \$0_ns;
#X msg 637 314 12;
#X obj 637 342 until;
#X obj 637 370 nn.input_cycle b, f 21;
#X obj 818 370 r \$0_ns;
#X obj 823 444 print activation;
#X obj 1010 444 print linear;
#X obj 637 444 print index;
#X text 642 488 // calculation check;
#X obj 651 764 expr $f1 * $f2 + $f3;
#X obj 729 705 nn.read_array;
#X obj 830 676 d_0;
#X obj 870 676 r \$0_ns;
#X msg 729 677 0;
#X obj 859 735 nn.read_array;
#X obj 960 706 d_0;
#X obj 1000 706 r \$0_ns;
#X msg 859 707 0;
#X msg 830 648 symbol weight_1;
#X msg 960 678 symbol bias_1;
#X obj 651 647 nn.read_array;
#X obj 752 618 d_0;
#X obj 792 618 r \$0_ns;
#X msg 651 619 0;
#X msg 651 516 bang;
#X obj 651 544 t b b b b b b b b, f 65;
#X obj 1094 735 nn.read_array;
#X obj 1195 706 d_0;
#X obj 1235 706 r \$0_ns;
#X msg 1094 707 0;
#X msg 1195 678 symbol linear_output_1;
#X obj 878 828 ==;
#X obj 878 865 print linear_calculations_match;
#X msg 752 590 symbol b;
#X obj 729 1115 nn.read_array;
#X obj 830 1086 d_0;
#X obj 870 1086 r \$0_ns;
#X obj 859 1145 nn.read_array;
#X obj 960 1116 d_0;
#X obj 1000 1116 r \$0_ns;
#X msg 859 1117 0;
#X msg 830 1058 symbol weight_1;
#X msg 960 1088 symbol bias_1;
#X obj 651 1057 nn.read_array;
#X obj 752 1028 d_0;
#X obj 792 1028 r \$0_ns;
#X msg 651 926 bang;
#X obj 651 954 t b b b b b b b b, f 65;
#X obj 1094 1145 nn.read_array;
#X obj 1195 1116 d_0;
#X obj 1235 1116 r \$0_ns;
#X obj 878 1238 ==;
#X msg 752 1000 symbol a;
#X msg 1195 1088 symbol activation_output_1;
#X text 640 889 // NOTE: depends on having run the nn.neuron_1 test in the left panel \;;
#X text 33 514 //nn.neuron_1 \; z = w.x + b \; a = g(z);
#X obj 651 1174 expr tanh($f1 * $f2 + $f3);
#X msg 1094 1117 1;
#X obj 878 1275 print activation_calculations_match;
#X msg 729 1087 0;
#X msg 651 1029 1;
#N canvas 208 279 1238 1062 initialize_test_data 0;
#X obj 37 819 array set;
#X msg 107 154 symbol a;
#X msg 187 243 symbol b;
#X msg 259 341 symbol c;
#X msg 360 420 symbol d;
#X msg 385 521 symbol weight_1;
#X msg 438 612 symbol bias_1;
#X msg 37 155 1 2 3 4;
#X msg 114 245 2 3 4 5;
#X msg 187 342 3 4 5 6;
#X msg 286 423 4 5 6 7;
#X msg 344 522 0.2;
#X msg 393 613 0.3;
#X obj 107 187 d_0;
#X obj 150 186 r \$0_ns;
#X obj 187 277 d_0;
#X obj 230 276 r \$0_ns;
#X obj 259 377 d_0;
#X obj 302 376 r \$0_ns;
#X obj 360 457 d_0;
#X obj 403 456 r \$0_ns;
#X obj 385 557 d_0;
#X obj 428 556 r \$0_ns;
#X obj 439 647 d_0;
#X obj 482 646 r \$0_ns;
#X obj 37 13 loadbang;
#X msg 116 13 bang;
#X obj 505 735 d_0;
#X obj 548 734 r \$0_ns;
#X msg 504 700 symbol weight_2;
#X msg 419 701 0.02 0.03;
#X obj 37 51 t b b b b b b b b b b b b b b, f 114;
#X connect 1 0 13 0;
#X connect 2 0 15 0;
#X connect 3 0 17 0;
#X connect 4 0 19 0;
#X connect 5 0 21 0;
#X connect 6 0 23 0;
#X connect 7 0 0 0;
#X connect 8 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 11 0 0 0;
#X connect 12 0 0 0;
#X connect 13 0 0 2;
#X connect 14 0 13 1;
#X connect 15 0 0 2;
#X connect 16 0 15 1;
#X connect 17 0 0 2;
#X connect 18 0 17 1;
#X connect 19 0 0 2;
#X connect 20 0 19 1;
#X connect 21 0 0 2;
#X connect 22 0 21 1;
#X connect 23 0 0 2;
#X connect 24 0 23 1;
#X connect 25 0 31 0;
#X connect 26 0 31 0;
#X connect 27 0 0 2;
#X connect 28 0 27 1;
#X connect 29 0 27 0;
#X connect 30 0 0 0;
#X connect 31 0 7 0;
#X connect 31 1 1 0;
#X connect 31 2 8 0;
#X connect 31 3 2 0;
#X connect 31 4 9 0;
#X connect 31 5 3 0;
#X connect 31 6 10 0;
#X connect 31 7 4 0;
#X connect 31 8 11 0;
#X connect 31 9 5 0;
#X connect 31 10 12 0;
#X connect 31 11 6 0;
#X connect 31 12 30 0;
#X connect 31 13 29 0;
#X restore 12 170 pd initialize_test_data;
#X obj 1432 2 cnv 23 800 1300 empty empty empty 20 12 0 16 #e0e0e0 #404040 0;
#X text 1449 27 // nn.neuron_2 \; // args \; \$1: symbol weight array (1 \, 2) \; \$2: symbol bias array (1 \, 1) \; \$3: symbol activation arr (1 \, m) \; \$4: symbol linear arr (1 \, m) \; \$5: symbol activation type \; // inlets \; 1: float \, index \; 2: float \, previous layer activation 1 \; 3: float \, previous layer activation 2 \; 4: float \, \$0 val for patch;
#X msg 1455 269 12;
#X obj 1455 297 until;
#X obj 1636 325 r \$0_ns;
#X obj 1888 427 r \$0_ns;
#X obj 1455 325 nn.input_cycle a, f 21;
#X obj 1761 375 r \$0_ns;
#X obj 1682 475 print activation;
#X obj 1496 428 nn.neuron_2 weight_2 bias_1 activation_output_1 linear_output_1 tanh;
#X obj 1627 375 nn.input_node b;
#X obj 1869 475 print linear;
#X obj 1496 474 print index;
#X text 1454 518 // z[i] = a[i] * w[0] + b[i] * w[1] + b \; a[i] = g^[l](z[i]);
#X msg 1455 579 12;
#X obj 1455 607 until;
#X obj 1636 635 r \$0_ns;
#X obj 1888 767 r \$0_ns;
#X obj 1761 715 r \$0_ns;
#X obj 1496 768 nn.neuron_2 weight_2 bias_1 activation_output_1 linear_output_1 tanh;
#X obj 1455 635 nn.array_cycle a, f 21;
#X obj 1627 715 nn.array_read b;
#X obj 1455 663 t f f f;
#X obj 1779 863 r \$0_ns;
#X obj 1496 967 nn.array_read activation_output_1;
#X obj 1778 967 r \$0_ns;
#X obj 1533 863 nn.array_read linear_output_1;
#X obj 1496 814 t f f;
#X obj 1762 902 ==;
#X obj 1757 1032 ==;
#X obj 1762 930 print linear values are equal;
#X obj 1758 1060 print activation values are equal;
#X obj 2242 2 cnv 23 800 1300 empty empty empty 20 12 0 16 #e0e0e0 #404040 0;
#X obj 2279 172 nn.array_read weight_2;
#X obj 2468 171 r \$0_ns;
#X obj 2972 169 r \$0_ns;
#X obj 2798 170 nn.array_read bias_1;
#X msg 2279 136 0;
#X msg 2798 139 0;
#X obj 2400 292 r \$0_ns;
#X msg 2266 262 3;
#X obj 2266 293 nn.array_read a;
#X obj 2539 171 nn.array_read weight_2;
#X obj 2728 170 r \$0_ns;
#X obj 2643 291 r \$0_ns;
#X msg 2509 261 3;
#X msg 2539 135 1;
#X obj 2509 292 nn.array_read b;
#X obj 2847 647 r \$0_ns;
#X msg 2570 616 3;
#X obj 2821 812 r \$0_ns;
#X msg 2544 781 3;
#X msg 2266 52 bang;
#X obj 2523 458 t f f f;
#X obj 2576 495 print calculated linear;
#X obj 2549 525 tanh;
#X obj 2549 553 t f f;
#X obj 2586 586 print calculated activation;
#X obj 2549 711 ==;
#X obj 2549 739 print calc equals stored linear;
#X obj 2523 919 print calc equals stored activation;
#X obj 2266 80 t b b b b b b b, f 89;
#X obj 2523 430 expr ($f1 * $f2) + ($f3 * $f4) + $f5;
#X obj 2523 886 ==;
#X obj 2570 647 nn.array_read activation_output_1;
#X obj 2831 686 print stored activation;
#X obj 2544 812 nn.array_read linear_output_1;
#X obj 2773 849 print stored linear;
#X text 2273 7 // nn.neuron_2 test continued (depends on having run previous panel);
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 4 0;
#X connect 6 0 9 0;
#X connect 7 0 6 1;
#X connect 8 0 6 0;
#X connect 11 0 0 0;
#X connect 13 0 15 0;
#X connect 13 1 15 1;
#X connect 14 0 13 0;
#X connect 15 0 17 0;
#X connect 16 0 18 0;
#X connect 17 0 16 0;
#X connect 17 1 19 0;
#X connect 19 0 16 0;
#X connect 23 0 22 0;
#X connect 25 1 33 0;
#X connect 25 2 34 0;
#X connect 26 0 25 2;
#X connect 27 0 28 0;
#X connect 28 0 30 2;
#X connect 29 0 28 1;
#X connect 30 0 25 1;
#X connect 31 0 25 0;
#X connect 31 1 30 0;
#X connect 32 0 30 1;
#X connect 35 0 37 2;
#X connect 36 0 35 1;
#X connect 37 0 46 0;
#X connect 38 0 35 0;
#X connect 39 0 37 0;
#X connect 39 0 55 0;
#X connect 40 0 42 2;
#X connect 41 0 40 1;
#X connect 42 0 45 0;
#X connect 43 0 56 0;
#X connect 44 0 40 0;
#X connect 47 0 57 0;
#X connect 48 0 23 0;
#X connect 50 0 47 0;
#X connect 50 1 48 0;
#X connect 50 2 47 0;
#X connect 50 3 48 0;
#X connect 51 0 50 0;
#X connect 52 0 31 0;
#X connect 53 0 54 0;
#X connect 54 0 52 0;
#X connect 54 1 32 0;
#X connect 54 2 27 0;
#X connect 55 1 38 0;
#X connect 56 0 42 0;
#X connect 56 1 44 0;
#X connect 57 0 21 0;
#X connect 59 0 67 0;
#X connect 59 1 68 0;
#X connect 60 0 59 2;
#X connect 61 0 59 0;
#X connect 62 0 59 1;
#X connect 64 0 65 0;
#X connect 65 0 66 0;
#X connect 66 0 69 0;
#X connect 66 1 70 0;
#X connect 71 0 66 2;
#X connect 72 0 80 0;
#X connect 72 1 78 0;
#X connect 72 2 79 0;
#X connect 73 0 72 2;
#X connect 74 0 75 0;
#X connect 75 0 76 0;
#X connect 76 0 72 0;
#X connect 76 1 72 1;
#X connect 77 0 76 2;
#X connect 82 0 104 0;
#X connect 83 0 82 1;
#X connect 84 0 83 1;
#X connect 85 0 84 1;
#X connect 86 0 83 0;
#X connect 87 0 82 2;
#X connect 88 0 87 1;
#X connect 89 0 88 1;
#X connect 90 0 87 0;
#X connect 91 0 84 0;
#X connect 92 0 88 0;
#X connect 93 0 82 0;
#X connect 94 0 93 1;
#X connect 95 0 94 1;
#X connect 96 0 93 0;
#X connect 97 0 98 0;
#X connect 98 0 96 0;
#X connect 98 1 106 0;
#X connect 98 2 86 0;
#X connect 98 3 91 0;
#X connect 98 4 90 0;
#X connect 98 5 92 0;
#X connect 98 6 102 0;
#X connect 98 7 103 0;
#X connect 99 0 104 1;
#X connect 100 0 99 1;
#X connect 101 0 100 1;
#X connect 102 0 99 0;
#X connect 103 0 100 0;
#X connect 104 0 105 0;
#X connect 106 0 94 0;
#X connect 107 0 129 1;
#X connect 108 0 107 1;
#X connect 109 0 108 1;
#X connect 110 0 129 2;
#X connect 111 0 110 1;
#X connect 112 0 111 1;
#X connect 113 0 110 0;
#X connect 114 0 108 0;
#X connect 115 0 111 0;
#X connect 116 0 129 0;
#X connect 117 0 116 1;
#X connect 118 0 117 1;
#X connect 119 0 120 0;
#X connect 120 0 133 0;
#X connect 120 1 125 0;
#X connect 120 2 132 0;
#X connect 120 3 114 0;
#X connect 120 4 113 0;
#X connect 120 5 115 0;
#X connect 120 6 130 0;
#X connect 120 7 126 0;
#X connect 121 0 124 1;
#X connect 122 0 121 1;
#X connect 123 0 122 1;
#X connect 124 0 131 0;
#X connect 125 0 117 0;
#X connect 126 0 122 0;
#X connect 129 0 124 0;
#X connect 130 0 121 0;
#X connect 132 0 107 0;
#X connect 133 0 116 0;
#X connect 137 0 138 0;
#X connect 138 0 141 0;
#X connect 139 0 141 2;
#X connect 140 0 144 3;
#X connect 141 0 145 0;
#X connect 141 1 144 1;
#X connect 142 0 145 1;
#X connect 144 0 147 0;
#X connect 144 1 143 0;
#X connect 144 2 146 0;
#X connect 145 0 144 0;
#X connect 145 1 144 2;
#X connect 149 0 150 0;
#X connect 150 0 155 0;
#X connect 151 0 155 2;
#X connect 152 0 154 3;
#X connect 153 0 156 1;
#X connect 154 0 162 0;
#X connect 154 1 164 1;
#X connect 154 2 163 1;
#X connect 155 0 157 0;
#X connect 155 1 154 1;
#X connect 156 0 154 0;
#X connect 156 1 154 2;
#X connect 157 2 156 0;
#X connect 158 0 161 1;
#X connect 159 1 164 0;
#X connect 160 0 159 1;
#X connect 161 1 163 0;
#X connect 162 0 159 0;
#X connect 162 1 161 0;
#X connect 163 0 165 0;
#X connect 164 0 166 0;
#X connect 168 1 197 1;
#X connect 169 0 168 1;
#X connect 170 0 171 1;
#X connect 171 1 197 4;
#X connect 172 0 168 0;
#X connect 173 0 171 0;
#X connect 174 0 176 1;
#X connect 175 0 176 0;
#X connect 176 1 197 0;
#X connect 177 1 197 3;
#X connect 178 0 177 1;
#X connect 179 0 182 1;
#X connect 180 0 182 0;
#X connect 181 0 177 0;
#X connect 182 1 197 2;
#X connect 183 0 199 1;
#X connect 184 0 199 0;
#X connect 185 0 201 1;
#X connect 186 0 201 0;
#X connect 187 0 196 0;
#X connect 188 0 198 0;
#X connect 188 1 190 0;
#X connect 188 2 189 0;
#X connect 190 0 191 0;
#X connect 191 0 193 0;
#X connect 191 1 192 0;
#X connect 193 0 194 0;
#X connect 196 0 175 0;
#X connect 196 1 180 0;
#X connect 196 2 172 0;
#X connect 196 3 181 0;
#X connect 196 4 173 0;
#X connect 196 5 184 0;
#X connect 196 6 186 0;
#X connect 197 0 188 0;
#X connect 198 0 195 0;
#X connect 199 1 193 1;
#X connect 199 1 200 0;
#X connect 201 1 198 1;
#X connect 201 1 202 0;
